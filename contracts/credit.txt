// One contract per intiative
contract Credits:
  event bucketChange
  event providerChange
  event feesChange
  event minDonationChange
  event treasuryChange
  event adminChange
  event donation
  event creditOffset
  event transfer
  event withdraw

  vars:
  - initiativeId
  - provider
  - treasury
  - bucketSize: 20
  - fees: 5
  - minDonation: 25
  - donations[] // may grow big, perhaps use logs?

  deploy(initiativeId, provider, treasury)

  // State view calls (public)
  getInitiativeId()
  getBucketSize()
  getProvider()
  getFees()
  getTreasury()
  getDonations()
  getMinimumDonation()

  // State changing calls (* log event, @ admin only)
  setBucketSize(num)*@
  setProvider(address)*@
  setFees(fee)*@
  setAdmin(address)*@    // new admin
  setTreasury(address)*@ // new treasury
  setMinimumDonation(amount)
  donation(amount)*@     // split fees, if bucket filled call offsetCredit
  withdraw()*@           // our fees to treasury wallet

  // internal calls
  offsetCredit()* // when bucket is filled after donation
  transfer()*     // transfer credit amount to provider
